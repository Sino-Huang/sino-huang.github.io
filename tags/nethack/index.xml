<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>NetHack on Sukai Huang</title>
    <link>https://sino-huang.github.io/tags/nethack/</link>
    <description>Recent content in NetHack on Sukai Huang</description>
    <image>
      <title>Sukai Huang</title>
      <url>https://sino-huang.github.io/cute_avatar.jpg</url>
      <link>https://sino-huang.github.io/cute_avatar.jpg</link>
    </image>
    <generator>Hugo -- 0.139.2</generator>
    <language>en</language>
    <lastBuildDate>Fri, 04 Mar 2022 12:11:55 +1100</lastBuildDate>
    <atom:link href="https://sino-huang.github.io/tags/nethack/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Mikayel_samvelyan Minihack the Planet a Sandbox for Open Ended Rl Research 2021</title>
      <link>https://sino-huang.github.io/posts/mikayel_samvelyan-minihack-the-planet-a-sandbox-for-open-ended-rl-research-2021/</link>
      <pubDate>Fri, 04 Mar 2022 12:11:55 +1100</pubDate>
      <guid>https://sino-huang.github.io/posts/mikayel_samvelyan-minihack-the-planet-a-sandbox-for-open-ended-rl-research-2021/</guid>
      <description>&lt;p&gt;[TOC]&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Title: MiniHack the Planet: A Sandbox for Open-Ended Reinforcement Learning Research&lt;/li&gt;
&lt;li&gt;Author: Mikayel Samvelyan et. al.&lt;/li&gt;
&lt;li&gt;Publish Year: Nov 2021&lt;/li&gt;
&lt;li&gt;Review Date: Mar 2022&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;summary-of-paper&#34;&gt;Summary of paper&lt;/h2&gt;
&lt;p&gt;They presented MiniHack, an easy-to-use framework for creating rich and varied RL environments, as well as a suite of tasks developed using this framework. Built upon NLE and the &lt;code&gt;des-file&lt;/code&gt; format, MiniHack enables the use of rich entities and dynamics from the game of NetHack to create a large variety of RL environments for targeted experimentation, while also allowing painless scaling-up of the difficulty of existing environments.  MiniHackâ€™s environments are procedurally generated by default, ensuring the evaluation of systematic generalization of RL agents.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
